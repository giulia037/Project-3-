{"version":3,"sources":["components/Hello/index.js","App.js","reportWebVitals.js","index.js"],"names":["Hello","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0JAiBeA,MAZf,WAKE,OACE,qBAAKC,UAAU,YAAW,SACxB,6BANY,yCASlB,EC0FeC,MAJf,WACE,OAAO,cAAC,EAAK,GACf,EC3FeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJAQ,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,SAM1Bb,G","file":"static/js/main.f6a026f3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// React components are isolated parts of an application that help organize and isolate different parts of the program into smaller chunks\r\n// We can pass data to these components and even render other components inside other components.\r\n// The `Hello` component is a child of our `App` component and is responsible for rendering the \"Hello World\" header.\r\nfunction Hello() {\r\n  const message = 'Hello world! I am a React Component';\r\n  // The return statement contains something called \"JSX\"\r\n  // JSX is a syntax extension to Javascript that allows us to write HTML inside Javascript\r\n  // Expressions in JSX should be placed in curly braces {}\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>{message}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hello;\r\n","// import React from 'react';\r\n// import {\r\n//   ApolloClient,\r\n//   InMemoryCache,\r\n//   ApolloProvider,\r\n//   createHttpLink,\r\n// } from '@apollo/client';\r\n// import { setContext } from '@apollo/client/link/context';\r\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\n\r\n// import Home from './pages/Home';\r\n// import Login from './pages/Login';\r\n// import DogListPage from './pages/DogList';\r\n// import SingleDog from './pages/SingleDog';\r\n// import Adoption from './pages/Adoption';\r\n// //import Profile from './pages/Profile';\r\n// //import Signup from './pages/Signup';\r\n// import AdoptionForm from './components/AdoptionForm';\r\n// import DogList from './components/DogList';\r\n// import Header from './components/Header';\r\n// import Footer from './components/Footer';\r\n\r\n// // Construct our main GraphQL API endpoint\r\n// const httpLink = createHttpLink({\r\n//   uri: '/graphql',\r\n// });\r\n\r\n// // Construct request middleware that will attach the JWT token to every request as an `authorization` header\r\n// const authLink = setContext((_, { headers }) => {\r\n//   // get the authentication token from local storage if it exists\r\n//   const token = localStorage.getItem('id_token');\r\n//   // return the headers to the context so httpLink can read them\r\n//   return {\r\n//     headers: {\r\n//       ...headers,\r\n//       authorization: token ? `Bearer ${token}` : '',\r\n//     },\r\n//   };\r\n// });\r\n\r\n// const client = new ApolloClient({\r\n//   // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\r\n//   link: authLink.concat(httpLink),\r\n//   cache: new InMemoryCache(),\r\n// });\r\n\r\n// function App() {\r\n//   return (\r\n//     <ApolloProvider client={client}>\r\n//       <Router>\r\n//         <div className=\"flex-column justify-flex-start min-100-vh\">\r\n//           <Header />\r\n//           <div className=\"container\">\r\n//             <Routes>\r\n//               <Route \r\n//                 path=\"/\"\r\n//                 element={<Home />}\r\n//               />\r\n//               <Route \r\n//                 path=\"/login\" \r\n//                 element={<Login />}\r\n//               />\r\n//               <Route \r\n//                 path=\"/signup\" \r\n//                 element={<Signup />}\r\n//               />\r\n//               <Route \r\n//                 path=\"/me\" \r\n//                 element={<Profile />}\r\n//               />\r\n//               <Route \r\n//                 path=\"/profiles/:username\" \r\n//                 element={<Profile />}\r\n//               />\r\n//               <Route \r\n//                 path=\"/dogList\" \r\n//                 element={<DogList/>}\r\n//               />\r\n//             </Routes>\r\n//             <Route \r\n//                 path=\"/SingleDog/:DogName\" \r\n//                 element={<SingleDog/>}\r\n//               />\r\n//             </Routes>\r\n//           </div>\r\n//           <Footer />\r\n//         </div>\r\n//       </Router>\r\n//     </ApolloProvider>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\nimport React from 'react';\r\n// First we import our Hello component from our components folder.\r\nimport Hello from './components/Hello';\r\n\r\n// React apps typically have a single App component at the very top that can reference other React components.\r\n// This component, `App`, is our main component that is importing `Hello` and rendering it in the return method.\r\nfunction App() {\r\n  return <Hello />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}